仿小辣椒项目部分代码




一、列表页的无刷新显示及排序

	<!-- 前台代码 -->
	<script>
	    //生成二级分类
	    function setType(obj){
	        $('.secondtype').find('li').remove();

	        for (var i = 0; i < obj.length; i++) {
	            $('.secondtype').append('<li><a typeid="'+$(obj[i]).attr('id')+'" onclick="doSecond(this)">'+$(obj[i]).attr('classname')+'</a></li>');
	        };

	    }

	    //生成商品列表
	    function setgood(obj){
	        $('.goods_list').find('li').remove();
	        
	        for (var i = 0; i < obj.length; i++) {
	            $('.goods_list').append('<li class="tehui"><div class="item-content" id="list_437"><a class="fitting-img" href="/home/detail/inx/'+$(obj[i]).attr('id')+'" title="'+$(obj[i]).attr('title')+'"><img id="cart_437" src="'+$(obj[i]).attr('main_figure')+'" alt="'+$(obj[i]).attr('title')+'"></a><span class="item-title">'+$(obj[i]).attr('title')+'</span><span class="item-price">￥'+$(obj[i]).attr('nowprice')+'元</span><span class="item-flag">新品</span></div></li>');
	        };
	    }

	    //点击一级分类发送ajax
	    function doTop(obj){
	        var id = $(obj).attr('typeid');
	        $.ajax({
	            url:'/home/list/inxinx',
	            data:{'id':id},
	            type:'Get',
	            dataType:'json',
	            success:function(event){
	                setType($(event).attr('subtype'));
	                setgood($(event).attr('goods'));
	            },
	        });
	    }

	    //点击二级分类发送ajax
	    function doSecond(obj){
	        var id = $(obj).attr('typeid');
	        $.ajax({
	            url:'/home/list/sndinx',
	            data:{'id':id},
	            type:'Get',
	            dataType:'json',
	            success:function(event){
	                setgood(event);
	            },
	        });
	    }

	    //按价格排序
	    $('.ascend').click(function(){

	        setorder($(this),1);
	    });

	    //按添加时间排序
	    $('.tiorder').click(function(){
	        setorder($(this),2);
	    });

	    //时间、价格排序方法
	    function setorder(obj,type){
	        var id = $(obj).attr('order');
	        if($(obj).attr('order') == 1){
	            $(obj).attr('order',2);
	        }else{
	            $(obj).attr('order',1);
	        }
	        $.ajax({
	            url:'/home/list/ord',
	            data:{'id':id,'type':type},
	            type:'Get',
	            dataType:'json',
	            success:function(event){
	                setgood(event);
	            },
	        });
	    }
	</script>
	<!-- 前台代码 -->


	<!-- 后台代码 -->
		//呈递从列表页调到列表页 一级分类
	    public function inxindex(Request $request)
	    {   
	        //删除session中的商品数据
	        session()->forget('order');

	    	$id = $request->input('id');
	    	$subtype = DB::table('type')->where('pid',$id)->get();
	    	$goods = [];
	    	foreach($subtype as $v){
	    		$res = DB::table('good')->where('typeid',$v->id)->get();
	    		foreach($res as $v){
	    			$goods[] = $v;
	    		}
	    	}

	        //商品数据储存session
	        session(['order'=>$goods]);
	    	return json_encode(['subtype'=>$subtype,'goods'=>$goods]);
	    }

	    //呈递从列表页调到列表页 二级分类
	    public function sndindex(Request $request)
	    {
	        //删除session中的商品数据
	        session()->forget('order');

	    	$id = $request->input('id');
	        $goods = DB::table('good')->where('typeid',$id)->get();

	        //商品数据储存session
	        session(['order'=>$goods]);
	    	return json_encode($goods);
	    }


	    //排序
	    public function order(Request $request)
	    {
	        // dd(session('order'));
	        $price = 'nowprice';
	        $time = 'time';
	        $goods = session('order');

	        if($request->input('id') == 1 && $request->input('type')==1){//价格升序
	            
	            $resgoods = homeListController::ascendorder($goods,$price);
	            
	        }elseif($request->input('id') == 2 && $request->input('type')==1){//价格降序
	            
	            $resgoods = homeListController::descendorder($goods,$price);

	        }elseif($request->input('id') == 1 && $request->input('type')==2){//时间升序
	            
	            $resgoods = homeListController::ascendorder($goods,$time);

	        }elseif($request->input('id') == 2 && $request->input('type')==2){//时间降序
	            
	            $resgoods = homeListController::descendorder($goods,$time);
	        }
	        
	        return json_encode($resgoods);
	    }

	    //升序排序
	    public static function ascendorder($goods,$param)
	    {
	        //开关 停止循环用的
	        $num = 0;
	        for ($i=0; $i < count($goods); $i++) {
	            if($i < count($goods)-1){
	                if($goods[$i]->$param > $goods[$i+1]->$param){
	                    $container = $goods[$i+1];
	                    $goods[$i+1] = $goods[$i];
	                    $goods[$i] = $container;
	                    $num = 1;
	                }
	            }
	        }
	        if($num == 0){
	            //没有位置调换，停止调用该排序方法，返回结果
	            return $goods;
	        }else{
	            //有位置调换，继续调用该方法
	            return homeListController::ascendorder($goods,$param);
	        }
	    }

	    //降序排序
	    public static function descendorder($goods,$param)
	    {
	        //开关 停止循环用的
	        $num = 0;
	        for ($i=0; $i < count($goods); $i++) {
	            if($i < count($goods)-1){
	                if($goods[$i]->$param < $goods[$i+1]->$param){
	                    $container = $goods[$i+1];
	                    $goods[$i+1] = $goods[$i];
	                    $goods[$i] = $container;
	                    $num = 1;
	                }
	            }
	        }
	        if($num == 0){
	            //没有位置调换，停止调用该排序方法，返回结果
	            return $goods;
	        }else{
	            //有位置调换，继续调用该方法
	            return homeListController::descendorder($goods,$param);
	        }
	    }
	<!-- 后台代码 -->




二、购物车页'＋' '－' '直接输入数量' 无刷新改变 小计、总计、购物车表和商品表的商品数量

	<!-- 前台代码 -->
		//计算总价
		function counttotal(){
			var subtotallist = $('.subtotal');
			var subtotal = 0;
			for (var i = 0; i < subtotallist.length; i++) {
				subtotal+=parseInt($(subtotallist[i]).html());
			};
			$('#money').html(subtotal);
		}

		//＋ － 更新购物车和商品表 库存的ajax
		function upnumajax(obj,num,type){//obj,emobj,id,num,type
			// 获取该条购物车信息的id
			var id = $(obj).attr('identity');
			//小计的标签
			var emobj = $(obj).parent().parent().next('td').find('em');

			$.ajaxSetup({
	            headers: {
	                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
	            }
	        });
			$.ajax({
				url:'/home/car/delns',
				data:{'id':id,'num':num,'type':type},
				type:'Post',
				async:false,
				success:function(event){
					if(event == '增加'){
						$(obj).next('input').val(num);
						emobj.html(parseInt($(obj).attr('price'))*num);
					}else if(event == '减少'){
						$(obj).prev('input').val(num);
						emobj.html(parseInt($(obj).attr('price'))*num);
					}else{
						alert('最大库存');
					}
				},
			});
		}

		//减商品数量
		function dodelnum(obj){
			//商品数量
			var num = $(obj).next('input').val();
			num--;
			if(num>=1){
				upnumajax($(obj),num,'del');
			}
			counttotal();
		}

		//增加商品数量
		function doaddnum(obj){
			//商品数量
			var num = $(obj).prev('input').val();
			num++;
			upnumajax($(obj),num,'add');
			counttotal();
		}


		
		//直接输入商品数量。
		var oldnum;
		function doipgetnum(obj){
			oldnum = $(obj).val();
		}

		function doipsetnum(obj){
			var id = $(obj).attr('identity');
			var nownum = $(obj).val();
			if(nownum<=0){
				$(obj).val(1);
				noewnum = 1;
			}
			if(oldnum != nownum){
				$.ajaxSetup({
		            headers: {
		                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
		            }
		        });
				$.ajax({
					url:'/home/car/ipns',
					type:'Post',
					data:{'id':id,'oldnum':oldnum,'nownum':nownum},
					async:false,
					success:function(event){
						if(event == '正常'){
							$(obj).val(nownum);
							$(obj).parent().parent().next('td').find('em').html(parseInt($(obj).attr('price'))*parseInt(nownum));
						}else{
							$(obj).val(event);
							$(obj).parent().parent().next('td').find('em').html(parseInt($(obj).attr('price'))*parseInt(event));
							alert('最大库存'+event);
						}
					},
				});
				counttotal();
			}
		}
	<!-- 前台代码 -->


	<!-- 后台代码 -->
		//加减操作 更新购物车表的数量、商品表的库存
	    public function delnumstore(Request $request)
	    {
	        if($request->input('type') == 'del'){//减少

	            self::deladdnum($request->input('id'),$request->input('num'),1);
	            return '增加';

	        }else{//增加
	            $num = DB::table('car')
	                ->join('good','car.goodid','=','good.id')
	                ->where('car.id','=',$request->input('id'))
	                ->select('good.store')
	                ->first();
	            if($num->store >= 1){//商品表库存 >=1的情况

	                self::deladdnum($request->input('id'),$request->input('num'),-1);
	                return '减少';

	            }elseif($num->store <= 0){//商品表库存 =0的情况

	                return '最大库存';

	            }
	        }
	    }

	    //＋ － 操作的具体方法
	    public static function deladdnum($id,$num,$param)
	    {
	        //更新购物车里商品的num
	        DB::table('car')->where('id',$id)->update(['num'=>$num]);
	        $goodid = DB::table('car')->where('id',$id)->first()->goodid;
	        //更新商品表里的store
	        $store = DB::table('good')->where('id',$goodid)->first()->store;
	        DB::table('good')->where('id',$goodid)->update(['store'=> $store+$param]);
	    }

	    //直接输入 原来、现有的值不相同时 更新购物车和商品表
	    public function setnumstore(Request $request)
	    {
	        $oldnum = (int)$request->input('oldnum');
	        $nownum = (int)$request->input('nownum');
	        $id = $request->input('id');
	        $store = (int)DB::table('car')->join('good','car.goodid','=','good.id')->where('car.id','=',$id)->select('good.store')->first()->store;
	        
	        if($nownum < $oldnum){//购物车数量减少

	            return self::count_different($nownum,$oldnum,$id,$store);

	        }elseif(($nownum > $oldnum) && ($nownum-$oldnum <= $store)){//购物车数量增加，且增数小于等于商品表库存

	            return self::count_different($nownum,$oldnum,$id,$store);

	        }elseif(($nownum > $oldnum) && ($nownum-$oldnum > $store)){//购物车数量增加，且增数大于商品表库存

	            $num = $oldnum + $store;
	            DB::table('car')->where('id',$id)->update(['num'=>$num]);
	            $goodid = DB::table('car')->where('id',$id)->first()->goodid;
	            DB::table('good')->where('id',$goodid)->update(['store'=>0]);
	            return $num;

	        }
	    }

	    //直接输入商品数量  具体处理的方法
	    public static function count_different($nownum,$oldnum,$id,$store)
	    {
	        $different = (int)$nownum - $oldnum;
	        DB::table('car')->where('id',$id)->update(['num'=>$nownum]);
	        $goodid = DB::table('car')->where('id',$id)->first()->goodid;
	        DB::table('good')->where('id',$goodid)->update(['store' => ($store - $different)]);
	        return '正常';
	    }
	<!-- 后台代码 -->




三、个人中心订单部分，购物车多条信息生成一个订单（数据的处理）

	<!-- 前台代码 -->

		<!-- 循环每条订单 -->
		@foreach($list as $key => $value)
	    <table>
	        <tr>
	        	<!-- 快递单号 -->
	            <th colspan="3">快递单号：{{ $list[$key]['express'] }}</th>
	            <!-- 快递单号 -->
	        </tr>
	        <tr>
	            <td class="order-list-goods">

					<!-- 循环每条商品 -->
					@foreach($list[$key] as $k => $v)
					<!-- 商品名称是否设置并且名称不为空 -->
					@if(isset($list[$key][$k]['title']) && $list[$key][$k]['title'] != '')
	                <ul>
	                    <li class="order-list-img">
	                    <!-- 商品图片是否设置 -->
	                    @if(isset($list[$key][$k]['picture']))
	                        <img src="{{ $list[$key][$k]['picture'] }}" width="50px">
	                    @endif
	                    </li>
	                    <li class="order-list-title">
	                    <!-- 商品名称是否设置 -->
	                    @if(isset($list[$key][$k]['title']))
	                        <a>{{ $list[$key][$k]['title'] }}</a>
	                    @endif
	                        <br>
	                    <!-- 商品价格是否设置 -->
	                    @if(isset($list[$key][$k]['price']))
	                        {{ $list[$key][$k]['price'] }}  
	                    @endif                              
	                    </li>
	                    <!-- 商品数量是否设置 -->
	                    @if(isset($list[$key][$k]['num']))
	                    <li>{{ $list[$key][$k]['num'] }}</li>
	                    @endif
	                </ul>
	                @endif
					@endforeach
					<!-- 循环每条商品 -->
	            </td>
	            <td class="order-list-pay">
	            	<!-- 订单总价 -->
	                ￥{{ $list[$key]['total'] }}<br>  
	                <!-- 订单总价 -->              
	            </td>
	            <td>
	            	<p>
	            	@if($list[$key]['state'] == 0)
	            	未付款
					@elseif($list[$key]['state'] == 1)
					已付款未发货
					@elseif($list[$key]['state'] == 2)
					已付款已发货
					@elseif($list[$key]['state'] == 3)
					已付款已收货
					@endif
	            	</p>
	                <a orderid="{{ $list[$key]['id'] }}" orderstate="{{ $list[$key]['state'] }}" onclick="dosetstate(this)" class="URLNet btn btn-primar">

	                @if($list[$key]['state'] == 0)
	            	立即付款
					@elseif($list[$key]['state'] == 1)
					等待发货
					@elseif($list[$key]['state'] == 2)
					收货
					@elseif($list[$key]['state'] == 3)
					已完成
					@endif

	                </a>
	            </td>
	        </tr>
	    </table>
		@endforeach
		<!-- 循环每条订单 -->

	<!-- 前台代码 -->


	<!-- 后台代码 -->

		//呈递个人中心首页
	    public function index()
	    {
	    	$res = DB::table('order')->where('home_uid',session('homeuser')->id)->orderBy('id')->get();
	    	//拼接商品标题、版本、赠品 成一个字符串
	    	$total_title = [];
	    	foreach ($res as $k => $v) {
	    		$total_title[] = $v->newtitle.$v->packg.$v->gift;
	    	}


	    	//分割字符串成数组
	    	for ($i=0; $i < count($total_title); $i++) { 
	    		//标题
	    		$data[] = self::setparam($total_title[$i]);
	    		//价格
	    		$price[] = self::setparam($res[$i]->price);
	    		//数量
	    		$num[] = self::setparam($res[$i]->num);
	    		//图片
	    		$picture[] = self::setparam($res[$i]->pic_add);
	    	}

	    	//拼接成一个数组
	    	$newdata = [];
	    	for ($i=0; $i < count($data); $i++) { 
	    		for ($k=0; $k < count($data[$i]); $k++) { 
	    			//有商品名称
	    			if($data[$i][$k] != ''){
	    				//商品名称
	    				$newdata[$i][$k]['title'] = $data[$i][$k];
	    				//商品图片
	    				if(isset($picture[$i][$k])){
	    					$newdata[$i][$k]['picture'] = $picture[$i][$k];
	    				}else{
	    					$newdata[$i][$k]['picture'] = '/defaultimage/logo.gif';
	    				}
	    				//商品价格
	    				if(isset($price[$i][$k])){
		    				$newdata[$i][$k]['price'] = $price[$i][$k];
		    			}else{
		    				$newdata[$i][$k]['price'] = 0;
		    			}
		    			//商品数量
		    			if(isset($num[$i][$k])){
		    				$newdata[$i][$k]['num'] = $num[$i][$k];
		    			}else{
		    				$newdata[$i][$k]['num'] = 1;
		    			}
	    			}
	    		}
	    		//订单ID
	    		$newdata[$i]['id'] = $res[$i]->id;
	    		//订单状态
	    		$newdata[$i]['state'] = $res[$i]->state;
	    		//订单总价
	    		$newdata[$i]['total'] = $res[$i]->total;
	    		//订单快递单号
	    		if($res[$i]->express){
	    			$newdata[$i]['express'] = $res[$i]->express;
	    		}else{
	    			$newdata[$i]['express'] = '';
	    		}
	    		
	    	}
	    	// dd($newdata);
	    	return view('home.center.order',['list'=>$newdata]);
	    }

	    //处理各商品参数 的方法
	    public static function setparam($param)
	    {
	    	$arr = explode('@',$param);
	    	array_pop($arr);
	    	return $arr;
	    }

	<!-- 后台代码 -->




四、后台页面的页大小、搜索、分页 无刷新展示数据。

	<!-- 前台代码 -->
		
		//生成数据列表 分页 的方法
		var show = function(event){

			//生成列表
			$('#t_body').find('tr').remove();//删除之前已有的 tr

			var t_body = $('#t_body');
			var res = $(event).attr('res');
			for (var i = 0; i < res.length; i++) {
				if(res[i]['status'] == '0'){//判断账户是否已激活
					var a = '未激活';
				}else{
					var a = '已激活';
				}
				var str = '';
				str += '<tr>';
				str += '<td>'+res[i]['id']+'</td>';
				str += '<td>'+res[i]['username']+'</td>';
				str += '<td>'+res[i]['pass']+'</td>';
				str += '<td>'+res[i]['phone']+'</td>';
				str += '<td>'+res[i]['email']+'</td>';
				str += '<td>'+a+'</td>';
				str += '<td><a idd="'+res[i]['id']+'" onclick="del(this)">删除</a>|<a idd="'+res[i]['id']+'" onclick="edit(this)">修改</a></td>';
				str += '</tr>';
				$(t_body).append(str);
			};

			//生成页码
			$('#index_page').find('li').remove();//删除之前的页码

			var nowpage = parseInt($(event).attr('nowpage'));//当前页码
			var page_num = parseInt($(event).attr('page_num'));//最大页码
			var indexul = $('#index_page');
			//生成页码的各种情况的判断
			var strr = '';
			if(page_num>=5 && nowpage<=(page_num-2) && nowpage>=3){
				strr += '<li><a onclick="doclick(this)" zdypage="'+1+'"><<</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(parseInt(nowpage)-2)+'">'+(parseInt(nowpage)-2)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(parseInt(nowpage)-1)+'">'+(parseInt(nowpage)-1)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+nowpage+'">'+nowpage+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(parseInt(nowpage)+1)+'">'+(parseInt(nowpage)+1)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(parseInt(nowpage)+2)+'">'+(parseInt(nowpage)+2)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+page_num+'">>></a></li>';
			}else if(page_num>=5 && nowpage<3){
				strr += '<li minpage=""><a onclick="doclick(this)" zdypage="'+1+'"><<</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+1+'">'+1+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+2+'">'+2+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+3+'">'+3+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+4+'">'+4+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+5+'">'+5+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+page_num+'">>></a></li>';
			}else if(page_num>=5 && nowpage>(page_num-2)){
				strr += '<li><a onclick="doclick(this)" zdypage="'+1+'"><<</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(page_num-4)+'">'+(page_num-4)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(page_num-3)+'">'+(page_num-3)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(page_num-2)+'">'+(page_num-2)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+(page_num-1)+'">'+(page_num-1)+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+page_num+'">'+page_num+'</a></li>';
				strr += '<li><a onclick="doclick(this)" zdypage="'+page_num+'">>></a></li>';
			}else if(page_num<5){
				strr += '<li><a onclick="doclick(this)" zdypage="'+1+'"><<</a></li>';
				for (var i = 1; i <= $(event).attr('page_num'); i++) {
					strr += '<li><a onclick="doclick(this)" zdypage="'+i+'">'+i+'</a></li>';
				};
				strr += '<li><a onclick="doclick(this)" zdypage="'+page_num+'">>></a></li>';
			}
			$(indexul).append(strr);
		}

		//aja 方法
		var aja = function(){
			$.ajax({
				url:'/admins/user',
				data:{'page':1},
				dataType:'json',
				type:'Get',
				success:function(event){
					show(event);
				},
			});
		}

		//页面加载时，触发ajax
		aja();

		//选择页大小时，触发ajax
		$('select:eq(0)').change(function(){
			$.ajax({
				url:'/admins/user',
				type:'Get',
				data:{'num':$(this).val(),'keyword':$('#keyword').val()},
				dataType:'json',
				success:function(event){
					show(event);
				},
			});
		});
		//搜索内容时，触发ajax
		$('#keyword').keyup(function(){
			$.ajax({
				url:'/admins/user',
				type:'Get',
				data:{'num':$('select:eq(0)').val(),'keyword':$(this).val()},
				dataType:'json',
				success:function(event){
					show(event);
				},
			});
		});
		//选择跳页时，触发ajax
		function doclick(page){
			
			$.ajax({
				url:'/admins/user',
				type:'Get',
				data:{'num':$('select:eq(0)').val(),'keyword':$('#keyword').val(),'page':$(page).attr('zdypage')},
				dataType:'json',
				success:function(event){
					show(event);
				},
			});
		};
	<!-- 前台代码 -->

	<!-- 后台代码 -->
	    public function index(Request $request)
	    {   
	        if($request->all()){
	            if($request->has('page')){
	                //当前页数
	                $start = $request->input('page');
	            }else{
	                //当前页数
	                $start = 1;
	            }
	            if($request->has('keyword')){
	                //keyword
	                $keyword = $request->input('keyword');
	            }else{
	                $keyword = '';
	            }
	            if($request->has('num')){
	                //页大小
	                $size = $request->input('num');
	            }else{
	                $size = 5;
	            }
	            return self::huoqu($start,$size,$keyword);
	        }else{
	            return view('admin.user.index');
	        }
	        
	    }

	    //获取数据 当前页数据、当前页码、最大页码
	    public static function huoqu($start,$size,$keyword)
	    {
	        if($keyword){
	            //当前页面的数据
	            $res = DB::table('home_user')->where(function($obj) use($keyword){
	                $obj->where('username','like','%'.$keyword.'%')
	                    ->orwhere('phone','like','%'.$keyword.'%');
	            })->offset(($start-1)*$size)->limit($size)->get();
	            //数据的 总条数
	            $total_num = DB::table('home_user')->where(function($obj) use($keyword){
	                $obj->where('username','like','%'.$keyword.'%')
	                    ->orwhere('phone','like','%'.$keyword.'%');
	            })->count();
	        }else{
	            //当前页面的数据
	            $res = DB::table('home_user')->offset(($start-1)*$size)->limit($size)->get();
	            //数据的 总条数
	            $total_num = DB::table('home_user')->count();
	        }
	        
	        //总页数
	        $page_num = ceil($total_num/$size);
	        $data = array('page_num'=>$page_num,'res'=>$res,'nowpage'=>$start);
	        return json_encode($data);
	    }
	<!-- 后台代码 -->
